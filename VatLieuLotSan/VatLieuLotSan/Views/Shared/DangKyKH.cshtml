@model VatLieuLotSan.DataBase.KHACHHANG

@section scripts{

    <script src="~/TaiLieu/Client/js/MyJs.js"></script>
}


<!--Modal


    đăng nhập và đăng ký tài khoản khách hàng -->
<div id="dangky" class="modal fade " role="dialog" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal_dialog_MyCode">

        <div class="modal-content">
            @using (Html.BeginForm("DangKy", "KhachHang", FormMethod.Post))
            {
                <div class="modal-header" style="text-align:center">
                    <h4 class="modal-title">Đăng Ký</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal col-md-12">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.TENKHACHHANG, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TENKHACHHANG, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TENKHACHHANG, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TENDANGNHAP, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TENDANGNHAP, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TENDANGNHAP, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MATKHAU, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.MATKHAU, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MATKHAU, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.SODIENTHOAI, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SODIENTHOAI, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SODIENTHOAI, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.DIACHI, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DIACHI, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DIACHI, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>


                </div>
                <div class="modal-footer">
                   
                    <button type="submit" class="btn btn-default " id="btn_SubDangKy" data-url="@Url.RequestContext.ToString()">Đăng Ký</button>
                    <button type="button" class="btn btn-default " data-target="#dangnhap" data-toggle="modal" id="" data-dismiss="modal">Đăng nhập</button>
                </div>
            }
        </div>
    </div>
</div>
<!--Stype cỉnh sửa form đăng nhập / đăng ký -->
<style>
    .modal_dialog_MyCode {
        left: 0;
        padding-top: 170px;
        width:
    }

    .input_KH {
        background-color: #ffffff;
    }

    .div_KH {
    }

    .sub-agile {
        float: left;
    }
</style>
